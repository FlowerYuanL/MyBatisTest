<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  mapper 根标签：
  - namespace（必需）：绑定 Mapper 接口的全限定名（包名+接口名）
  - 作用：建立 XML 文件与 Java 接口的关联
-->


<!--
    接口式开发：
    1.方法的名称需要保证和映射文件中的sql语句的statmentId一致
    2.namespace的值必须是接口的全路径
 -->


<mapper namespace="com.example.mapper.UserMapper">

    <!--
    id="接口中的方法名"
    parameterType="传入的参数类型"
    resultType="返回实体类对象，使用包，类名"
    -->
    <select id="findById" parameterType="int" resultType="User">
        select*from users where id = #{id}
    </select>

    <select id="findTotal" resultType="int">
        select count(*) from users
    </select>

    <!--软删除-->
    <update id="deleteById" parameterType="int">
        update users set del = 1 where id = #{id}
    </update>

    <select id="findAll" resultType="User">
        select*from users
    </select>

    <!--方法一-->
<!--    <insert id="addUser" parameterType="User"
            &lt;!&ndash;主键回写，插入数据后的主键值会回写到类中&ndash;&gt;
            useGeneratedKeys="true"
            keyProperty="id">
        insert into users (user_name,email,password, del)
        values(
                 #{userName},#{email},#{password},#{del}
                )
    </insert>-->


    <!--方法二-->
    <!--
    keyProperty：表示返回的值会赋给Java中类的某一个属性的名称
    resultType：表示返回值的类型
    order：表示该执行的位于insert语句的先后
    SELECT LAST_INSERT_ID()：表示获取新生成的Id值
    -->
    <insert id="addUser" parameterType="User">
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into users (user_name,email,password, del)
        values(
                 #{userName},#{email},#{password},#{del}
                )
    </insert>

    <!--方法三：（针对不支持主键自增的数据库）-->
    <!--
    这种方法就是在执行SQL语句之前生成一个随机数作为数据的主键值。
    -->
<!--    <insert id="addUser" parameterType="User">
        <selectKey keyProperty="id" resultType="Integer" order="BEFORE">
            SELECT FLOOR(RAND()*1000+1)
        </selectKey>
        insert into users (id,user_name,email,password, del)
        values(
        #{id},#{userName},#{email},#{password},#{del}
        )
    </insert>-->

</mapper>
